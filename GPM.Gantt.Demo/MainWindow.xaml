<Window x:Class="GPM.Gantt.Demo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GPM.Gantt.Demo"
        xmlns:gantt="clr-namespace:GPM.Gantt;assembly=GPM.Gantt"
        xmlns:models="clr-namespace:GPM.Gantt.Models;assembly=GPM.Gantt"
        xmlns:utilities="clr-namespace:GPM.Gantt.Utilities;assembly=GPM.Gantt"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="GPM Gantt Chart Demo" Height="800" Width="1400"
        WindowState="Maximized">
    
    <Window.Resources>
        <!-- Common brushes for theming -->
        <SolidColorBrush x:Key="PrimaryBrush" Color="#2196F3"/>
        <SolidColorBrush x:Key="AccentBrush" Color="#FFC107"/>
        <SolidColorBrush x:Key="WeekendBrush" Color="#FFF5F5"/>
        <SolidColorBrush x:Key="TodayBrush" Color="#E8F5E8"/>
        <SolidColorBrush x:Key="GridBrush" Color="#E0E0E0"/>
        
        <!-- Converter for boolean to visibility -->
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        
        <!-- Time cell styling -->
        <Style TargetType="{x:Type gantt:GanttTimeCell}">
            <Setter Property="ContentPadding" Value="8,4"/>
            <Setter Property="OutlineBrush" Value="{StaticResource GridBrush}"/>
            <Setter Property="OutlineThickness" Value="1"/>
            <Setter Property="Background" Value="#FAFAFA"/>
            <Setter Property="FontWeightEx" Value="SemiBold"/>
            <Style.Triggers>
                <Trigger Property="IsWeekend" Value="True">
                    <Setter Property="Background" Value="{StaticResource WeekendBrush}"/>
                </Trigger>
                <Trigger Property="IsToday" Value="True">
                    <Setter Property="Background" Value="{StaticResource TodayBrush}"/>
                    <Setter Property="OutlineBrush" Value="{StaticResource AccentBrush}"/>
                    <Setter Property="OutlineThickness" Value="2"/>
                </Trigger>
                <Trigger Property="IsHovered" Value="True">
                    <Setter Property="OutlineBrush" Value="{StaticResource PrimaryBrush}"/>
                    <Setter Property="OutlineThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Grid cell styling -->
        <Style TargetType="{x:Type gantt:GanttGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="OutlineBrush" Value="{StaticResource GridBrush}"/>
            <Setter Property="OutlineThickness" Value="0,0,1,1"/>
            <Style.Triggers>
                <Trigger Property="IsWeekend" Value="True">
                    <Setter Property="Background" Value="#FCFCFC"/>
                </Trigger>
                <Trigger Property="IsToday" Value="True">
                    <Setter Property="Background" Value="{StaticResource TodayBrush}"/>
                    <Setter Property="OutlineBrush" Value="{StaticResource AccentBrush}"/>
                </Trigger>
                <Trigger Property="IsHovered" Value="True">
                    <Setter Property="Background" Value="#F0F8FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Grid row styling -->
        <Style TargetType="{x:Type gantt:GanttGridRow}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="OutlineBrush" Value="{StaticResource GridBrush}"/>
            <Setter Property="OutlineThickness" Value="0,0,0,1"/>
            <Style.Triggers>
                <Trigger Property="IsHovered" Value="True">
                    <Setter Property="Background" Value="#F8F9FA"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Enhanced task bar styling -->
        <Style TargetType="{x:Type gantt:GanttTaskBar}">
            <Setter Property="Background" Value="#2196F3"/>
            <Setter Property="OutlineBrush" Value="#1976D2"/>
            <Setter Property="OutlineThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <!-- Priority-based colors -->
                <Trigger Property="Priority" Value="Critical">
                    <Setter Property="Background" Value="#FF1744"/>
                    <Setter Property="OutlineBrush" Value="#D50000"/>
                </Trigger>
                <Trigger Property="Priority" Value="High">
                    <Setter Property="Background" Value="#FF5722"/>
                    <Setter Property="OutlineBrush" Value="#D84315"/>
                </Trigger>
                <Trigger Property="Priority" Value="Low">
                    <Setter Property="Background" Value="#9E9E9E"/>
                    <Setter Property="OutlineBrush" Value="#616161"/>
                </Trigger>
                
                <!-- Status-based styling -->
                <Trigger Property="Status" Value="Completed">
                    <Setter Property="Background" Value="#4CAF50"/>
                    <Setter Property="OutlineBrush" Value="#388E3C"/>
                    <Setter Property="Opacity" Value="0.8"/>
                </Trigger>
                <Trigger Property="Status" Value="OnHold">
                    <Setter Property="Background" Value="#FFC107"/>
                    <Setter Property="OutlineBrush" Value="#F57C00"/>
                </Trigger>
                <Trigger Property="Status" Value="Cancelled">
                    <Setter Property="Background" Value="#9E9E9E"/>
                    <Setter Property="OutlineBrush" Value="#424242"/>
                    <Setter Property="Opacity" Value="0.6"/>
                </Trigger>
                
                <!-- Interactive states -->
                <Trigger Property="IsHovered" Value="True">
                    <Setter Property="OutlineThickness" Value="2"/>
                    <Setter Property="Opacity" Value="0.9"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="OutlineBrush" Value="#FF6D00"/>
                    <Setter Property="OutlineThickness" Value="3"/>
                    <Setter Property="Opacity" Value="1.0"/>
                </Trigger>
                
                <!-- Disabled state -->
                <Trigger Property="IsInteractive" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                    <Setter Property="Cursor" Value="Arrow"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Control panel styling -->
        <Style x:Key="ControlGroupStyle" TargetType="GroupBox">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="BorderBrush" Value="{StaticResource GridBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontSize" Value="11"/>
        </Style>
        
        <Style x:Key="LabelStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,4,0"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="11"/>
        </Style>
    </Window.Resources>

    <DockPanel>
        <!-- Control Panel -->
        <Grid DockPanel.Dock="Top" Background="#F5F5F5" Margin="0,0,0,8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!-- First Row: Primary Controls -->
            <WrapPanel Grid.Row="0" Orientation="Horizontal" Margin="4">
                <!-- Time Range Group -->
                <GroupBox Header="Time Range" Style="{StaticResource ControlGroupStyle}" MinWidth="320">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Start:" Style="{StaticResource LabelStyle}"/>
                        <DatePicker x:Name="StartPicker" 
                                   SelectedDate="{Binding StartTime, ElementName=Gantt, Mode=TwoWay}"
                                   Width="110" Margin="0,0,12,0"/>
                        <TextBlock Text="End:" Style="{StaticResource LabelStyle}"/>
                        <DatePicker x:Name="EndPicker" 
                                   SelectedDate="{Binding EndTime, ElementName=Gantt, Mode=TwoWay}"
                                   Width="110"/>
                    </StackPanel>
                </GroupBox>
                
                <!-- Time Scale Group -->
                <GroupBox Header="Scale and Format" Style="{StaticResource ControlGroupStyle}" MinWidth="280">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Unit:" Style="{StaticResource LabelStyle}" MinWidth="35"/>
                        <ComboBox x:Name="TimeUnitCombo"
                                 SelectedValue="{Binding ElementName=Gantt, Path=TimeUnit, Mode=TwoWay}"
                                 SelectedValuePath="Tag" Width="80" Margin="0,0,8,0">
                            <ComboBoxItem Content="Hour" Tag="{x:Static models:TimeUnit.Hour}"/>
                            <ComboBoxItem Content="Day" Tag="{x:Static models:TimeUnit.Day}" IsSelected="True"/>
                            <ComboBoxItem Content="Week" Tag="{x:Static models:TimeUnit.Week}"/>
                            <ComboBoxItem Content="Month" Tag="{x:Static models:TimeUnit.Month}"/>
                            <ComboBoxItem Content="Year" Tag="{x:Static models:TimeUnit.Year}"/>
                        </ComboBox>
                        
                        <TextBlock Text="Date:" Style="{StaticResource LabelStyle}" MinWidth="35"/>
                        <ComboBox x:Name="DateFormatCombo"
                                 SelectedValue="{Binding ElementName=Gantt, Path=DateFormat, Mode=TwoWay}"
                                 Width="80" IsEditable="True">
                            <ComboBoxItem Content="MMM dd" IsSelected="True"/>
                            <ComboBoxItem Content="MM/dd"/>
                            <ComboBoxItem Content="dd MMM"/>
                            <ComboBoxItem Content="yyyy-MM-dd"/>
                        </ComboBox>
                    </StackPanel>
                </GroupBox>
                
                <!-- Display Options Group -->
                <GroupBox Header="Display Options" Style="{StaticResource ControlGroupStyle}" MinWidth="260">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox Content="Grid Cells" 
                                 IsChecked="{Binding ElementName=Gantt, Path=ShowGridCells, Mode=TwoWay}"
                                 VerticalAlignment="Center" Margin="0,0,12,0"/>
                        <CheckBox Content="Clamp Tasks"
                                 IsChecked="{Binding ElementName=Gantt, Path=ClampTasksToVisibleRows, Mode=TwoWay}"
                                 VerticalAlignment="Center" Margin="0,0,12,0"/>
                    </StackPanel>
                </GroupBox>
                
                <!-- Theme Selection Group -->
                <GroupBox Header="Theme" Style="{StaticResource ControlGroupStyle}" MinWidth="160">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Style:" Style="{StaticResource LabelStyle}" MinWidth="35"/>
                        <ComboBox x:Name="ThemeCombo"
                                 SelectionChanged="ThemeCombo_SelectionChanged"
                                 Width="110">
                            <ComboBoxItem Content="Default" IsSelected="True"/>
                            <ComboBoxItem Content="Dark"/>
                            <ComboBoxItem Content="Light"/>
                            <ComboBoxItem Content="Modern"/>
                        </ComboBox>
                    </StackPanel>
                </GroupBox>
                
                <!-- Data Operations Group -->
                <GroupBox Header="Data Operations" Style="{StaticResource ControlGroupStyle}" MinWidth="360">
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="LoadAsyncButton" Content="Load" Width="60" Margin="0,0,4,0" 
                                Command="{Binding ViewModel.LoadTasksAsyncCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                        <Button x:Name="AddAsyncButton" Content="Add Task" Width="70" Margin="0,0,4,0" 
                                Command="{Binding ViewModel.AddTaskAsyncCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                        <Button x:Name="CancelButton" Content="Cancel" Width="60" Margin="0,0,8,0" 
                                IsEnabled="{Binding ViewModel.IsBusy, RelativeSource={RelativeSource AncestorType=Window}}" 
                                Command="{Binding ViewModel.CancelAsyncCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                        <ProgressBar x:Name="BusyBar" Width="80" Height="16" IsIndeterminate="True" 
                                    Visibility="{Binding ViewModel.IsBusy, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BoolToVis}}"/>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
            
            <!-- Second Row: Layout Controls -->
            <WrapPanel Grid.Row="1" Orientation="Horizontal" Margin="4">
                <!-- Task Settings Group -->
                <GroupBox Header="Task Settings" Style="{StaticResource ControlGroupStyle}" MinWidth="200">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Count:" Style="{StaticResource LabelStyle}" MinWidth="45"/>
                        <Slider x:Name="TaskCountSlider"
                               Minimum="1" Maximum="20" 
                               Value="{Binding ElementName=Gantt, Path=TaskCount, Mode=TwoWay}"
                               Width="80" TickFrequency="1" IsSnapToTickEnabled="True"/>
                        <TextBlock Text="{Binding ElementName=TaskCountSlider, Path=Value}" 
                                  VerticalAlignment="Center" Width="25" Margin="4,0,0,0"/>
                    </StackPanel>
                </GroupBox>
                
                <!-- Row Heights Group -->
                <GroupBox Header="Row Heights" Style="{StaticResource ControlGroupStyle}" MinWidth="280">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Header:" Style="{StaticResource LabelStyle}" MinWidth="45"/>
                        <Slider x:Name="HeaderHeightSlider"
                               Minimum="0" Maximum="100" Value="40"
                               Width="60" TickFrequency="10" IsSnapToTickEnabled="True"/>
                        <TextBlock Text="{Binding ElementName=HeaderHeightSlider, Path=Value}" 
                                  Width="25" VerticalAlignment="Center" Margin="4,0,8,0"/>
                        
                        <TextBlock Text="Tasks:" Style="{StaticResource LabelStyle}" MinWidth="45"/>
                        <Slider x:Name="TaskHeightSlider"
                               Minimum="0" Maximum="150" Value="50"
                               Width="60" TickFrequency="10" IsSnapToTickEnabled="True"/>
                        <TextBlock Text="{Binding ElementName=TaskHeightSlider, Path=Value}" 
                                  Width="25" VerticalAlignment="Center" Margin="4,0,0,0"/>
                    </StackPanel>
                </GroupBox>
                
                <!-- Time Format Group -->
                <GroupBox Header="Time Format" Style="{StaticResource ControlGroupStyle}" MinWidth="120">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Time:" Style="{StaticResource LabelStyle}" MinWidth="35"/>
                        <ComboBox x:Name="TimeFormatCombo"
                                 SelectedValue="{Binding ElementName=Gantt, Path=TimeFormat, Mode=TwoWay}"
                                 Width="70" IsEditable="True">
                            <ComboBoxItem Content="HH:mm" IsSelected="True"/>
                            <ComboBoxItem Content="hh:mm tt"/>
                            <ComboBoxItem Content="HH:mm:ss"/>
                            <ComboBoxItem Content="h:mm tt"/>
                        </ComboBox>
                    </StackPanel>
                </GroupBox>
                
                <!-- Interactive Features Group -->
                <GroupBox Header="Interactive Features" Style="{StaticResource ControlGroupStyle}" MinWidth="280">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox Content="Interaction" 
                                 IsChecked="{Binding ElementName=Gantt, Path=IsInteractionEnabled, Mode=TwoWay}"
                                 VerticalAlignment="Center" Margin="0,0,12,0"/>
                        <CheckBox Content="Drag &amp; Drop"
                                 IsChecked="{Binding ElementName=Gantt, Path=IsDragDropEnabled, Mode=TwoWay}"
                                 VerticalAlignment="Center" Margin="0,0,12,0"/>
                        <CheckBox Content="Resize"
                                 IsChecked="{Binding ElementName=Gantt, Path=IsResizeEnabled, Mode=TwoWay}"
                                 VerticalAlignment="Center" Margin="0,0,12,0"/>
                        <CheckBox Content="Multi-Select"
                                 IsChecked="{Binding ElementName=Gantt, Path=IsMultiSelectionEnabled, Mode=TwoWay}"
                                 VerticalAlignment="Center"/>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
        </Grid>
        
        <!-- Status Bar -->
        <StatusBar DockPanel.Dock="Bottom" Height="25">
            <StatusBarItem>
                <TextBlock Text="Ready - Drag tasks to move, drag edges to resize, double-click to edit" x:Name="StatusText"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding ElementName=Gantt, Path=Tasks.Count, StringFormat='Tasks: {0}'}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding ElementName=TimeUnitCombo, Path=SelectedValue, StringFormat='Scale: {0}'}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock x:Name="SelectionStatusText" Text="No selection"/>
            </StatusBarItem>
        </StatusBar>
        
        <!-- Main Gantt Chart Area -->
        <Border DockPanel.Dock="Top" 
                BorderBrush="{StaticResource GridBrush}" 
                BorderThickness="1" 
                Background="White"
                Margin="8">
            <gantt:GanttContainer x:Name="Gantt" 
                                 HeaderRowHeight="{Binding ElementName=HeaderHeightSlider, Path=Value, Converter={utilities:DoubleToGridLengthConverter}}"
                                 TaskRowHeight="{Binding ElementName=TaskHeightSlider, Path=Value, Converter={utilities:DoubleToGridLengthConverter}}"
                                 TimeUnit="{Binding ElementName=TimeUnitCombo, Path=SelectedValue, Mode=TwoWay}"
                                 DateFormat="{Binding ElementName=DateFormatCombo, Path=Text, Mode=TwoWay}"
                                 TimeFormat="{Binding ElementName=TimeFormatCombo, Path=Text, Mode=TwoWay}"
                                 ShowGridCells="True"/>
        </Border>
    </DockPanel>
</Window>
